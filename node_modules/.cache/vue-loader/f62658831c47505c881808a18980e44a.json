{"remainingRequest":"/home/barker/Desktop/new_baby_home_0212/babynames-vue-app0121/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/barker/Desktop/new_baby_home_0212/babynames-vue-app0121/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/barker/Desktop/new_baby_home_0212/babynames-vue-app0121/src/App.vue","mtime":1581702831704},{"path":"/home/barker/Desktop/new_baby_home_0212/babynames-vue-app0121/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/barker/Desktop/new_baby_home_0212/babynames-vue-app0121/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/barker/Desktop/new_baby_home_0212/babynames-vue-app0121/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/barker/Desktop/new_baby_home_0212/babynames-vue-app0121/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/barker/Desktop/new_baby_home_0212/babynames-vue-app0121/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCkBpbXBvcnQgJy4vc3R5bGVzLmNzcyc7Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n<div id=\"app\">\n  <h1>Lil' Baby Names</h1>\n    <input v-model=\"startsWith\" placeholder=\"starts with\"/>\n    <input v-model=\"contains\" placeholder=\"contains these letters\"/>\n    <button id=\"btn\" class=\"\" v-on:click=\"findNames\">Go</button>\n  <p>Result:</p>\n    <ul>\n      <li v-for=\"(name,index) in names\" :key=\"name\">{{name}}</li>\n    </ul>\n</div>\n</template>\n<style>\n  @import './styles.css';\n</style>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n        contains: '',\n        startsWith: '',\n        sortBy: 'alpha',\n        gender:'male,mostly-male,neutral,mostly-female,female',\n        minLength:'1',\n        maxLength:'25',\n        names: [],\n        pageSize: [10],\n        pageNumber: [1],\n        totalResults: 0,\n        lastEvent: 0\n    };\n},\n\nwatch: {\n        pageNumber() {\n            this.throttledFindNamesLeavePage();\n        },\n        lastPage() {\n            this.throttledFindNamesLeavePage();\n        },  \n        minLength() {\n            this.throttledFindNames();\n        },\n        maxLength() {\n            this.throttledFindNames();\n        },\n        startsWith() {\n            this.throttledFindNames();\n        },\n        contains() {\n            this.throttledFindNames();\n        },\n    },\n\nmethods: {\n    findNames() {\n        axios\n            .get(\n                'http://names.sinistercode.com:4242/api/names?'\n                    + 'format=json'\n                    + '&sort=' + this.sortBy\n                    + '&contains-letters=' + this.contains\n                    + '&starts-with=' + this.startsWith\n                    + '&gender=' + this.gender\n                    + '&sort=length&min-length=' + this.minLength\n                    + '&sort=length&max-length=' + this.maxLength\n                    + '&page-size=' + this.pageSize\n                    + '&page=' + this.pageNumber\n            )  \n            .then((response) => {\n                this.names = response.data.results.map(item => item.name)\n             { console.log(response)\n                this.names = response.data.results.map(item => item.name)\n             }\n            })\n    },\n    resetPage() {\n        this.pageNumber=1;\n    },\n    nextPage() {\n        this.pageNumber++;\n    },\n    previousPage() {\n        this.pageNumber--;\n    },\n    lastPage() {\n        this.pageNumber = Math.ceil(this.totalResults / 10);\n    },\n    throttledFindNames() {\n        var t = (new Date()).getTime();\n        if(t - this.lastEvent > 500)\n            this.findNames(),\n        this.resetPage();\n        else\n            this.lastEvent = t;\n    },\n    throttledFindNamesLeavePage() {\n        var t = (new Date()).getTime();\n        if(t - this.lastEvent > 500)\n            this.findNames();\n        else\n            this.lastEvent = t;\n    }\n},\n    return: {\n        fontSize: 10\n    }\n};\n</script>\n\n"]}]}